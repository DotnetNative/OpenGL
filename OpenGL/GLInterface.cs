using static OpenGL.Enums;
using static OpenGL.Interop;

namespace OpenGL;
public unsafe struct GLInterface
{
    nint ProcAddr(string name) => GetProcAddress(Base, name);

    public GLInterface()
    {
        Base = GetModuleHandle("opengl32");
        glAccum = (delegate* unmanaged<Op, float, void>)ProcAddr("glAccum");
        glAlphaFunc = (delegate* unmanaged<Func, float, void>)ProcAddr("glAlphaFunc");
        glAreTexturesResident = (delegate* unmanaged<int, uint*, byte*, byte>)ProcAddr("glAreTexturesResident");
        glArrayElement = (delegate* unmanaged<int, void>)ProcAddr("glArrayElement");
        glBegin = (delegate* unmanaged<Mode, void>)ProcAddr("glBegin");
        glBindTexture = (delegate* unmanaged<TexPTarget, uint, void>)ProcAddr("glBindTexture");
        glBitmap = (delegate* unmanaged<int, int, float, float, float, float, byte*, void>)ProcAddr("glBitmap");
        glBlendFunc = (delegate* unmanaged<Factor, Factor, void>)ProcAddr("glBlendFunc");
        glCallList = (delegate* unmanaged<uint, void>)ProcAddr("glCallList");
        glCallLists = (delegate* unmanaged<int, Enums.Type, void*, void>)ProcAddr("glCallLists");
        glClear = (delegate* unmanaged<uint, void>)ProcAddr("glClear");
        glClearAccum = (delegate* unmanaged<float, float, float, float, void>)ProcAddr("glClearAccum");
        glClearColor = (delegate* unmanaged<float, float, float, float, void>)ProcAddr("glClearColor");
        glClearDepth = (delegate* unmanaged<double, void>)ProcAddr("glClearDepth");
        glClearIndex = (delegate* unmanaged<float, void>)ProcAddr("glClearIndex");
        glClearStencil = (delegate* unmanaged<int, void>)ProcAddr("glClearStencil");
        glClipPlane = (delegate* unmanaged<Plane, double*, void>)ProcAddr("glClipPlane");
        glColor3b = (delegate* unmanaged<sbyte, sbyte, sbyte, void>)ProcAddr("glColor3b");
        glColor3bv = (delegate* unmanaged<sbyte*, void>)ProcAddr("glColor3bv");
        glColor3d = (delegate* unmanaged<double, double, double, void>)ProcAddr("glColor3d");
        glColor3dv = (delegate* unmanaged<double*, void>)ProcAddr("glColor3dv");
        glColor3f = (delegate* unmanaged<float, float, float, void>)ProcAddr("glColor3f");
        glColor3fv = (delegate* unmanaged<float*, void>)ProcAddr("glColor3fv");
        glColor3i = (delegate* unmanaged<int, int, int, void>)ProcAddr("glColor3i");
        glColor3iv = (delegate* unmanaged<int*, void>)ProcAddr("glColor3iv");
        glColor3s = (delegate* unmanaged<short, short, short, void>)ProcAddr("glColor3s");
        glColor3sv = (delegate* unmanaged<short*, void>)ProcAddr("glColor3sv");
        glColor3ub = (delegate* unmanaged<byte, byte, byte, void>)ProcAddr("glColor3ub");
        glColor3ubv = (delegate* unmanaged<byte*, void>)ProcAddr("glColor3ubv");
        glColor3ui = (delegate* unmanaged<uint, uint, uint, void>)ProcAddr("glColor3ui");
        glColor3uiv = (delegate* unmanaged<uint*, void>)ProcAddr("glColor3uiv");
        glColor3us = (delegate* unmanaged<ushort, ushort, ushort, void>)ProcAddr("glColor3us");
        glColor3usv = (delegate* unmanaged<ushort*, void>)ProcAddr("glColor3usv");
        glColor4b = (delegate* unmanaged<sbyte, sbyte, sbyte, sbyte, void>)ProcAddr("glColor4b");
        glColor4bv = (delegate* unmanaged<sbyte*, void>)ProcAddr("glColor4bv");
        glColor4d = (delegate* unmanaged<double, double, double, double, void>)ProcAddr("glColor4d");
        glColor4dv = (delegate* unmanaged<double*, void>)ProcAddr("glColor4dv");
        glColor4f = (delegate* unmanaged<float, float, float, float, void>)ProcAddr("glColor4f");
        glColor4fv = (delegate* unmanaged<float*, void>)ProcAddr("glColor4fv");
        glColor4i = (delegate* unmanaged<int, int, int, int, void>)ProcAddr("glColor4i");
        glColor4iv = (delegate* unmanaged<int*, void>)ProcAddr("glColor4iv");
        glColor4s = (delegate* unmanaged<short, short, short, short, void>)ProcAddr("glColor4s");
        glColor4sv = (delegate* unmanaged<short*, void>)ProcAddr("glColor4sv");
        glColor4ub = (delegate* unmanaged<byte, byte, byte, byte, void>)ProcAddr("glColor4ub");
        glColor4ubv = (delegate* unmanaged<byte*, void>)ProcAddr("glColor4ubv");
        glColor4ui = (delegate* unmanaged<uint, uint, uint, uint, void>)ProcAddr("glColor4ui");
        glColor4uiv = (delegate* unmanaged<uint*, void>)ProcAddr("glColor4uiv");
        glColor4us = (delegate* unmanaged<ushort, ushort, ushort, ushort, void>)ProcAddr("glColor4us");
        glColor4usv = (delegate* unmanaged<ushort*, void>)ProcAddr("glColor4usv");
        glColorMask = (delegate* unmanaged<byte, byte, byte, byte, void>)ProcAddr("glColorMask");
        glColorMaterial = (delegate* unmanaged<Face, MaterialParam, void>)ProcAddr("glColorMaterial");
        glColorPointer = (delegate* unmanaged<int, BType, int, void*, void>)ProcAddr("glColorPointer");
        glCopyPixels = (delegate* unmanaged<int, int, int, int, CopyType, void>)ProcAddr("glCopyPixels");
        glCopyTexImage1D = (delegate* unmanaged<TexPTarget, int, InternalFormat, int, int, int, int, void>)ProcAddr("glCopyTexImage1D");
        glCopyTexImage2D = (delegate* unmanaged<TexPTarget, int, InternalFormat, int, int, int, int, int, void>)ProcAddr("glCopyTexImage2D");
        glCopyTexSubImage1D = (delegate* unmanaged<TexPTarget, int, int, int, int, int, void>)ProcAddr("glCopyTexSubImage1D");
        glCopyTexSubImage2D = (delegate* unmanaged<TexPTarget, int, int, int, int, int, int, int, void>)ProcAddr("glCopyTexSubImage2D");
        glCullFace = (delegate* unmanaged<Face, void>)ProcAddr("glCullFace");
        glDeleteLists = (delegate* unmanaged<uint, int, void>)ProcAddr("glDeleteLists");
        glDeleteTextures = (delegate* unmanaged<int, uint*, void>)ProcAddr("glDeleteTextures");
        glDepthFunc = (delegate* unmanaged<Func, void>)ProcAddr("glDepthFunc");
        glDepthMask = (delegate* unmanaged<byte, void>)ProcAddr("glDepthMask");
        glDepthRange = (delegate* unmanaged<double, double, void>)ProcAddr("glDepthRange");
        glDisable = (delegate* unmanaged<Cap, void>)ProcAddr("glDisable");
        glDisableClientState = (delegate* unmanaged<ArrayState, void>)ProcAddr("glDisableClientState");
        glDrawArrays = (delegate* unmanaged<Mode, int, int, void>)ProcAddr("glDrawArrays");
        glDrawBuffer = (delegate* unmanaged<Mode, void>)ProcAddr("glDrawBuffer");
        glDrawElements = (delegate* unmanaged<Mode, int, BUType, void*, void>)ProcAddr("glDrawElements");
        glDrawPixels = (delegate* unmanaged<int, int, ImageFormat, BType, void*, void>)ProcAddr("glDrawPixels");
        glEdgeFlag = (delegate* unmanaged<byte, void>)ProcAddr("glEdgeFlag");
        glEdgeFlagPointer = (delegate* unmanaged<int, void*, void>)ProcAddr("glEdgeFlagPointer");
        glEdgeFlagv = (delegate* unmanaged<byte*, void>)ProcAddr("glEdgeFlagv");
        glEnable = (delegate* unmanaged<Cap, void>)ProcAddr("glEnable");
        glEnableClientState = (delegate* unmanaged<ArrayState, void>)ProcAddr("glEnableClientState");
        glEnd = (delegate* unmanaged<void>)ProcAddr("glEnd");
        glEndList = (delegate* unmanaged<void>)ProcAddr("glEndList");
        glEvalCoord1d = (delegate* unmanaged<double, void>)ProcAddr("glEvalCoord1d");
        glEvalCoord1dv = (delegate* unmanaged<double*, void>)ProcAddr("glEvalCoord1dv");
        glEvalCoord1f = (delegate* unmanaged<float, void>)ProcAddr("glEvalCoord1f");
        glEvalCoord1fv = (delegate* unmanaged<float*, void>)ProcAddr("glEvalCoord1fv");
        glEvalCoord2d = (delegate* unmanaged<double, double, void>)ProcAddr("glEvalCoord2d");
        glEvalCoord2dv = (delegate* unmanaged<double*, void>)ProcAddr("glEvalCoord2dv");
        glEvalCoord2f = (delegate* unmanaged<float, float, void>)ProcAddr("glEvalCoord2f");
        glEvalCoord2fv = (delegate* unmanaged<float*, void>)ProcAddr("glEvalCoord2fv");
        glEvalMesh1 = (delegate* unmanaged<EMesh, int, int, void>)ProcAddr("glEvalMesh1");
        glEvalMesh2 = (delegate* unmanaged<Mesh, int, int, int, int, void>)ProcAddr("glEvalMesh2");
        glEvalPoint1 = (delegate* unmanaged<int, void>)ProcAddr("glEvalPoint1");
        glEvalPoint2 = (delegate* unmanaged<int, int, void>)ProcAddr("glEvalPoint2");
        glFeedbackBuffer = (delegate* unmanaged<int, Vertex, float*, void>)ProcAddr("glFeedbackBuffer");
        glFinish = (delegate* unmanaged<void>)ProcAddr("glFinish");
        glFlush = (delegate* unmanaged<void>)ProcAddr("glFlush");
        glFogf = (delegate* unmanaged<Fog, float, void>)ProcAddr("glFogf");
        glFogfv = (delegate* unmanaged<Fog, float*, void>)ProcAddr("glFogfv");
        glFogi = (delegate* unmanaged<Fog, int, void>)ProcAddr("glFogi");
        glFogiv = (delegate* unmanaged<Fog, int*, void>)ProcAddr("glFogiv");
        glFrontFace = (delegate* unmanaged<FaceMode, void>)ProcAddr("glFrontFace");
        glFrustum = (delegate* unmanaged<double, double, double, double, double, double, void>)ProcAddr("glFrustum");
        glGenLists = (delegate* unmanaged<int, uint>)ProcAddr("glGenLists");
        glGenTextures = (delegate* unmanaged<int, uint*, void>)ProcAddr("glGenTextures");
        glGetBooleanv = (delegate* unmanaged<PName, byte*, void>)ProcAddr("glGetBooleanv");
        glGetClipPlane = (delegate* unmanaged<Plane, double*, void>)ProcAddr("glGetClipPlane");
        glGetDoublev = (delegate* unmanaged<PName, double*, void>)ProcAddr("glGetDoublev");
        glGetError = (delegate* unmanaged<Error>)ProcAddr("glGetError");
        glGetFloatv = (delegate* unmanaged<PName, float*, void>)ProcAddr("glGetFloatv");
        glGetIntegerv = (delegate* unmanaged<PName, int*, void>)ProcAddr("glGetIntegerv");
        glGetLightfv = (delegate* unmanaged<Light, LightN, float*, void>)ProcAddr("glGetLightfv");
        glGetLightiv = (delegate* unmanaged<Light, LightN, int*, void>)ProcAddr("glGetLightiv");
        glGetMapdv = (delegate* unmanaged<MapTarget, Query, double*, void>)ProcAddr("glGetMapdv");
        glGetMapfv = (delegate* unmanaged<MapTarget, Query, float*, void>)ProcAddr("glGetMapfv");
        glGetMapiv = (delegate* unmanaged<MapTarget, Query, int*, void>)ProcAddr("glGetMapiv");
        glGetMaterialfv = (delegate* unmanaged<Side, MaterialParam, float*, void>)ProcAddr("glGetMaterialfv");
        glGetMaterialiv = (delegate* unmanaged<Side, MaterialParam, int*, void>)ProcAddr("glGetMaterialiv");
        glGetPixelMapfv = (delegate* unmanaged<Map, float*, void>)ProcAddr("glGetPixelMapfv");
        glGetPixelMapuiv = (delegate* unmanaged<Map, uint*, void>)ProcAddr("glGetPixelMapuiv");
        glGetPixelMapusv = (delegate* unmanaged<Map, ushort*, void>)ProcAddr("glGetPixelMapusv");
        glGetPointerv = (delegate* unmanaged<PNamePtr, void**, void>)ProcAddr("glGetPointerv");
        glGetPolygonStipple = (delegate* unmanaged<byte*, void>)ProcAddr("glGetPolygonStipple");
        glGetString = (delegate* unmanaged<StringName, byte*>)ProcAddr("glGetString");
        glGetTexEnvfv = (delegate* unmanaged<int, TexEnvN, float*, void>)ProcAddr("glGetTexEnvfv");
        glGetTexEnviv = (delegate* unmanaged<int, TexEnvN, int*, void>)ProcAddr("glGetTexEnviv");
        glGetTexGendv = (delegate* unmanaged<Coords, TexGenN, double*, void>)ProcAddr("glGetTexGendv");
        glGetTexGenfv = (delegate* unmanaged<Coords, TexGenN, float*, void>)ProcAddr("glGetTexGenfv");
        glGetTexGeniv = (delegate* unmanaged<Coords, TexGenN, int*, void>)ProcAddr("glGetTexGeniv");
        glGetTexImage = (delegate* unmanaged<TexTarget, int, Image, BType, void*, void>)ProcAddr("glGetTexImage");
        glGetTexLevelParameterfv = (delegate* unmanaged<TexPTarget, int, TexN, float*, void>)ProcAddr("glGetTexLevelParameterfv");
        glGetTexLevelParameteriv = (delegate* unmanaged<TexPTarget, int, TexN, int*, void>)ProcAddr("glGetTexLevelParameteriv");
        glGetTexParameterfv = (delegate* unmanaged<TexTarget, TexNV, float*, void>)ProcAddr("glGetTexParameterfv");
        glGetTexParameteriv = (delegate* unmanaged<TexTarget, TexNV, int*, void>)ProcAddr("glGetTexParameteriv");
        glHint = (delegate* unmanaged<Hint, Calc, void>)ProcAddr("glHint");
        glIndexMask = (delegate* unmanaged<uint, void>)ProcAddr("glIndexMask");
        glIndexPointer = (delegate* unmanaged<TexType, int, void*, void>)ProcAddr("glIndexPointer");
        glIndexd = (delegate* unmanaged<double, void>)ProcAddr("glIndexd");
        glIndexdv = (delegate* unmanaged<double*, void>)ProcAddr("glIndexdv");
        glIndexf = (delegate* unmanaged<float, void>)ProcAddr("glIndexf");
        glIndexfv = (delegate* unmanaged<float*, void>)ProcAddr("glIndexfv");
        glIndexi = (delegate* unmanaged<int, void>)ProcAddr("glIndexi");
        glIndexiv = (delegate* unmanaged<int*, void>)ProcAddr("glIndexiv");
        glIndexs = (delegate* unmanaged<short, void>)ProcAddr("glIndexs");
        glIndexsv = (delegate* unmanaged<short*, void>)ProcAddr("glIndexsv");
        glIndexub = (delegate* unmanaged<byte, void>)ProcAddr("glIndexub");
        glIndexubv = (delegate* unmanaged<byte*, void>)ProcAddr("glIndexubv");
        glInitNames = (delegate* unmanaged<void>)ProcAddr("glInitNames");
        glInterleavedArrays = (delegate* unmanaged<ArrayFormat, int, void*, void>)ProcAddr("glInterleavedArrays");
        glIsEnabled = (delegate* unmanaged<Cap, byte>)ProcAddr("glIsEnabled");
        glIsList = (delegate* unmanaged<uint, byte>)ProcAddr("glIsList");
        glIsTexture = (delegate* unmanaged<uint, byte>)ProcAddr("glIsTexture");
        glLightModelf = (delegate* unmanaged<LightModel, float, void>)ProcAddr("glLightModelf");
        glLightModelfv = (delegate* unmanaged<LightModel, float*, void>)ProcAddr("glLightModelfv");
        glLightModeli = (delegate* unmanaged<LightModel, int, void>)ProcAddr("glLightModeli");
        glLightModeliv = (delegate* unmanaged<LightModel, int*, void>)ProcAddr("glLightModeliv");
        glLightf = (delegate* unmanaged<Light, LightN, float, void>)ProcAddr("glLightf");
        glLightfv = (delegate* unmanaged<Light, LightN, float*, void>)ProcAddr("glLightfv");
        glLighti = (delegate* unmanaged<Light, LightN, int, void>)ProcAddr("glLighti");
        glLightiv = (delegate* unmanaged<Light, LightN, int*, void>)ProcAddr("glLightiv");
        glLineStipple = (delegate* unmanaged<int, ushort, void>)ProcAddr("glLineStipple");
        glLineWidth = (delegate* unmanaged<float, void>)ProcAddr("glLineWidth");
        glListBase = (delegate* unmanaged<uint, void>)ProcAddr("glListBase");
        glLoadIdentity = (delegate* unmanaged<void>)ProcAddr("glLoadIdentity");
        glLoadMatrixd = (delegate* unmanaged<double*, void>)ProcAddr("glLoadMatrixd");
        glLoadMatrixf = (delegate* unmanaged<float*, void>)ProcAddr("glLoadMatrixf");
        glLoadName = (delegate* unmanaged<uint, void>)ProcAddr("glLoadName");
        glLogicOp = (delegate* unmanaged<OpCode, void>)ProcAddr("glLogicOp");
        glMap1d = (delegate* unmanaged<Map1Target, double, double, int, int, double*, void>)ProcAddr("glMap1d");
        glMap1f = (delegate* unmanaged<Map1Target, float, float, int, int, float*, void>)ProcAddr("glMap1f");
        glMap2d = (delegate* unmanaged<Map1Target, double, double, int, int, double, double, int, int, double*, void>)ProcAddr("glMap2d");
        glMap2f = (delegate* unmanaged<Map1Target, float, float, int, int, float, float, int, int, float*, void>)ProcAddr("glMap2f");
        glMapGrid1d = (delegate* unmanaged<int, double, double, void>)ProcAddr("glMapGrid1d");
        glMapGrid1f = (delegate* unmanaged<int, float, float, void>)ProcAddr("glMapGrid1f");
        glMapGrid2d = (delegate* unmanaged<int, double, double, int, double, double, void>)ProcAddr("glMapGrid2d");
        glMapGrid2f = (delegate* unmanaged<int, float, float, int, float, float, void>)ProcAddr("glMapGrid2f");
        glMaterialf = (delegate* unmanaged<Side, int, float, void>)ProcAddr("glMaterialf");
        glMaterialfv = (delegate* unmanaged<Side, MaterialParam, float*, void>)ProcAddr("glMaterialfv");
        glMateriali = (delegate* unmanaged<Side, MaterialParam, int, void>)ProcAddr("glMateriali");
        glMaterialiv = (delegate* unmanaged<Side, MaterialParam, int*, void>)ProcAddr("glMaterialiv");
        glMatrixMode = (delegate* unmanaged<Matrix, void>)ProcAddr("glMatrixMode");
        glMultMatrixd = (delegate* unmanaged<double*, void>)ProcAddr("glMultMatrixd");
        glMultMatrixf = (delegate* unmanaged<float*, void>)ProcAddr("glMultMatrixf");
        glNewList = (delegate* unmanaged<uint, Compile, void>)ProcAddr("glNewList");
        glNormal3b = (delegate* unmanaged<sbyte, sbyte, sbyte, void>)ProcAddr("glNormal3b");
        glNormal3bv = (delegate* unmanaged<sbyte*, void>)ProcAddr("glNormal3bv");
        glNormal3d = (delegate* unmanaged<double, double, double, void>)ProcAddr("glNormal3d");
        glNormal3dv = (delegate* unmanaged<double*, void>)ProcAddr("glNormal3dv");
        glNormal3f = (delegate* unmanaged<float, float, float, void>)ProcAddr("glNormal3f");
        glNormal3fv = (delegate* unmanaged<float*, void>)ProcAddr("glNormal3fv");
        glNormal3i = (delegate* unmanaged<int, int, int, void>)ProcAddr("glNormal3i");
        glNormal3iv = (delegate* unmanaged<int*, void>)ProcAddr("glNormal3iv");
        glNormal3s = (delegate* unmanaged<short, short, short, void>)ProcAddr("glNormal3s");
        glNormal3sv = (delegate* unmanaged<short*, void>)ProcAddr("glNormal3sv");
        glNormalPointer = (delegate* unmanaged<PtrType, int, void*, void>)ProcAddr("glNormalPointer");
        glOrtho = (delegate* unmanaged<double, double, double, double, double, double, void>)ProcAddr("glOrtho");
        glPassThrough = (delegate* unmanaged<float, void>)ProcAddr("glPassThrough");
        glPixelMapfv = (delegate* unmanaged<Map, int, float*, void>)ProcAddr("glPixelMapfv");
        glPixelMapuiv = (delegate* unmanaged<Map, int, uint*, void>)ProcAddr("glPixelMapuiv");
        glPixelMapusv = (delegate* unmanaged<Map, int, ushort*, void>)ProcAddr("glPixelMapusv");
        glPixelStoref = (delegate* unmanaged<StoreN, float, void>)ProcAddr("glPixelStoref");
        glPixelStorei = (delegate* unmanaged<StoreN, int, void>)ProcAddr("glPixelStorei");
        glPixelTransferf = (delegate* unmanaged<TransferN, float, void>)ProcAddr("glPixelTransferf");
        glPixelTransferi = (delegate* unmanaged<TransferN, int, void>)ProcAddr("glPixelTransferi");
        glPixelZoom = (delegate* unmanaged<float, float, void>)ProcAddr("glPixelZoom");
        glPointSize = (delegate* unmanaged<float, void>)ProcAddr("glPointSize");
        glPolygonMode = (delegate* unmanaged<MaterialFace, Mesh, void>)ProcAddr("glPolygonMode");
        glPolygonOffset = (delegate* unmanaged<float, float, void>)ProcAddr("glPolygonOffset");
        glPolygonStipple = (delegate* unmanaged<byte*, void>)ProcAddr("glPolygonStipple");
        glPopAttrib = (delegate* unmanaged<void>)ProcAddr("glPopAttrib");
        glPopClientAttrib = (delegate* unmanaged<void>)ProcAddr("glPopClientAttrib");
        glPopMatrix = (delegate* unmanaged<void>)ProcAddr("glPopMatrix");
        glPopName = (delegate* unmanaged<void>)ProcAddr("glPopName");
        glPrioritizeTextures = (delegate* unmanaged<int, uint*, float*, void>)ProcAddr("glPrioritizeTextures");
        glPushAttrib = (delegate* unmanaged<uint, void>)ProcAddr("glPushAttrib");
        glPushClientAttrib = (delegate* unmanaged<uint, void>)ProcAddr("glPushClientAttrib");
        glPushMatrix = (delegate* unmanaged<void>)ProcAddr("glPushMatrix");
        glPushName = (delegate* unmanaged<uint, void>)ProcAddr("glPushName");
        glRasterPos2d = (delegate* unmanaged<double, double, void>)ProcAddr("glRasterPos2d");
        glRasterPos2dv = (delegate* unmanaged<double*, void>)ProcAddr("glRasterPos2dv");
        glRasterPos2f = (delegate* unmanaged<float, float, void>)ProcAddr("glRasterPos2f");
        glRasterPos2fv = (delegate* unmanaged<float*, void>)ProcAddr("glRasterPos2fv");
        glRasterPos2i = (delegate* unmanaged<int, int, void>)ProcAddr("glRasterPos2i");
        glRasterPos2iv = (delegate* unmanaged<int*, void>)ProcAddr("glRasterPos2iv");
        glRasterPos2s = (delegate* unmanaged<short, short, void>)ProcAddr("glRasterPos2s");
        glRasterPos2sv = (delegate* unmanaged<short*, void>)ProcAddr("glRasterPos2sv");
        glRasterPos3d = (delegate* unmanaged<double, double, double, void>)ProcAddr("glRasterPos3d");
        glRasterPos3dv = (delegate* unmanaged<double*, void>)ProcAddr("glRasterPos3dv");
        glRasterPos3f = (delegate* unmanaged<float, float, float, void>)ProcAddr("glRasterPos3f");
        glRasterPos3fv = (delegate* unmanaged<float*, void>)ProcAddr("glRasterPos3fv");
        glRasterPos3i = (delegate* unmanaged<int, int, int, void>)ProcAddr("glRasterPos3i");
        glRasterPos3iv = (delegate* unmanaged<int*, void>)ProcAddr("glRasterPos3iv");
        glRasterPos3s = (delegate* unmanaged<short, short, short, void>)ProcAddr("glRasterPos3s");
        glRasterPos3sv = (delegate* unmanaged<short*, void>)ProcAddr("glRasterPos3sv");
        glRasterPos4d = (delegate* unmanaged<double, double, double, double, void>)ProcAddr("glRasterPos4d");
        glRasterPos4dv = (delegate* unmanaged<double*, void>)ProcAddr("glRasterPos4dv");
        glRasterPos4f = (delegate* unmanaged<float, float, float, float, void>)ProcAddr("glRasterPos4f");
        glRasterPos4fv = (delegate* unmanaged<float*, void>)ProcAddr("glRasterPos4fv");
        glRasterPos4i = (delegate* unmanaged<int, int, int, int, void>)ProcAddr("glRasterPos4i");
        glRasterPos4iv = (delegate* unmanaged<int*, void>)ProcAddr("glRasterPos4iv");
        glRasterPos4s = (delegate* unmanaged<short, short, short, short, void>)ProcAddr("glRasterPos4s");
        glRasterPos4sv = (delegate* unmanaged<short*, void>)ProcAddr("glRasterPos4sv");
        glReadBuffer = (delegate* unmanaged<Buf, void>)ProcAddr("glReadBuffer");
        glReadPixels = (delegate* unmanaged<int, int, int, int, Image, ReadType, void*, void>)ProcAddr("glReadPixels");
        glRectd = (delegate* unmanaged<double, double, double, double, void>)ProcAddr("glRectd");
        glRectdv = (delegate* unmanaged<double*, double*, void>)ProcAddr("glRectdv");
        glRectf = (delegate* unmanaged<float, float, float, float, void>)ProcAddr("glRectf");
        glRectfv = (delegate* unmanaged<float*, float*, void>)ProcAddr("glRectfv");
        glRecti = (delegate* unmanaged<int, int, int, int, void>)ProcAddr("glRecti");
        glRectiv = (delegate* unmanaged<int*, int*, void>)ProcAddr("glRectiv");
        glRects = (delegate* unmanaged<short, short, short, short, void>)ProcAddr("glRects");
        glRectsv = (delegate* unmanaged<short*, short*, void>)ProcAddr("glRectsv");
        glRenderMode = (delegate* unmanaged<Render, int>)ProcAddr("glRenderMode");
        glRotated = (delegate* unmanaged<double, double, double, double, void>)ProcAddr("glRotated");
        glRotatef = (delegate* unmanaged<float, float, float, float, void>)ProcAddr("glRotatef");
        glScaled = (delegate* unmanaged<double, double, double, void>)ProcAddr("glScaled");
        glScalef = (delegate* unmanaged<float, float, float, void>)ProcAddr("glScalef");
        glScissor = (delegate* unmanaged<int, int, int, int, void>)ProcAddr("glScissor");
        glSelectBuffer = (delegate* unmanaged<int, uint*, void>)ProcAddr("glSelectBuffer");
        glShadeModel = (delegate* unmanaged<Fill, void>)ProcAddr("glShadeModel");
        glStencilFunc = (delegate* unmanaged<Func, int, uint, void>)ProcAddr("glStencilFunc");
        glStencilMask = (delegate* unmanaged<uint, void>)ProcAddr("glStencilMask");
        glStencilOp = (delegate* unmanaged<Fail, Fail, Fail, void>)ProcAddr("glStencilOp");
        glTexCoord1d = (delegate* unmanaged<double, void>)ProcAddr("glTexCoord1d");
        glTexCoord1dv = (delegate* unmanaged<double*, void>)ProcAddr("glTexCoord1dv");
        glTexCoord1f = (delegate* unmanaged<float, void>)ProcAddr("glTexCoord1f");
        glTexCoord1fv = (delegate* unmanaged<float*, void>)ProcAddr("glTexCoord1fv");
        glTexCoord1i = (delegate* unmanaged<int, void>)ProcAddr("glTexCoord1i");
        glTexCoord1iv = (delegate* unmanaged<int*, void>)ProcAddr("glTexCoord1iv");
        glTexCoord1s = (delegate* unmanaged<short, void>)ProcAddr("glTexCoord1s");
        glTexCoord1sv = (delegate* unmanaged<short*, void>)ProcAddr("glTexCoord1sv");
        glTexCoord2d = (delegate* unmanaged<double, double, void>)ProcAddr("glTexCoord2d");
        glTexCoord2dv = (delegate* unmanaged<double*, void>)ProcAddr("glTexCoord2dv");
        glTexCoord2f = (delegate* unmanaged<float, float, void>)ProcAddr("glTexCoord2f");
        glTexCoord2fv = (delegate* unmanaged<float*, void>)ProcAddr("glTexCoord2fv");
        glTexCoord2i = (delegate* unmanaged<int, int, void>)ProcAddr("glTexCoord2i");
        glTexCoord2iv = (delegate* unmanaged<int*, void>)ProcAddr("glTexCoord2iv");
        glTexCoord2s = (delegate* unmanaged<short, short, void>)ProcAddr("glTexCoord2s");
        glTexCoord2sv = (delegate* unmanaged<short*, void>)ProcAddr("glTexCoord2sv");
        glTexCoord3d = (delegate* unmanaged<double, double, double, void>)ProcAddr("glTexCoord3d");
        glTexCoord3dv = (delegate* unmanaged<double*, void>)ProcAddr("glTexCoord3dv");
        glTexCoord3f = (delegate* unmanaged<float, float, float, void>)ProcAddr("glTexCoord3f");
        glTexCoord3fv = (delegate* unmanaged<float*, void>)ProcAddr("glTexCoord3fv");
        glTexCoord3i = (delegate* unmanaged<int, int, int, void>)ProcAddr("glTexCoord3i");
        glTexCoord3iv = (delegate* unmanaged<int*, void>)ProcAddr("glTexCoord3iv");
        glTexCoord3s = (delegate* unmanaged<short, short, short, void>)ProcAddr("glTexCoord3s");
        glTexCoord3sv = (delegate* unmanaged<short*, void>)ProcAddr("glTexCoord3sv");
        glTexCoord4d = (delegate* unmanaged<double, double, double, double, void>)ProcAddr("glTexCoord4d");
        glTexCoord4dv = (delegate* unmanaged<double*, void>)ProcAddr("glTexCoord4dv");
        glTexCoord4f = (delegate* unmanaged<float, float, float, float, void>)ProcAddr("glTexCoord4f");
        glTexCoord4fv = (delegate* unmanaged<float*, void>)ProcAddr("glTexCoord4fv");
        glTexCoord4i = (delegate* unmanaged<int, int, int, int, void>)ProcAddr("glTexCoord4i");
        glTexCoord4iv = (delegate* unmanaged<int*, void>)ProcAddr("glTexCoord4iv");
        glTexCoord4s = (delegate* unmanaged<short, short, short, short, void>)ProcAddr("glTexCoord4s");
        glTexCoord4sv = (delegate* unmanaged<short*, void>)ProcAddr("glTexCoord4sv");
        glTexCoordPointer = (delegate* unmanaged<int, TexType, int, void*, void>)ProcAddr("glTexCoordPointer");
        glTexEnvf = (delegate* unmanaged<int, TexEnvN, float, void>)ProcAddr("glTexEnvf");
        glTexEnvfv = (delegate* unmanaged<int, TexEnvN, float*, void>)ProcAddr("glTexEnvfv");
        glTexEnvi = (delegate* unmanaged<int, TexEnvN, int, void>)ProcAddr("glTexEnvi");
        glTexEnviv = (delegate* unmanaged<int, TexEnvN, int*, void>)ProcAddr("glTexEnviv");
        glTexGend = (delegate* unmanaged<Coords, TexGen, double, void>)ProcAddr("glTexGend");
        glTexGendv = (delegate* unmanaged<Coords, TexGen, double*, void>)ProcAddr("glTexGendv");
        glTexGenf = (delegate* unmanaged<Coords, TexGen, float, void>)ProcAddr("glTexGenf");
        glTexGenfv = (delegate* unmanaged<Coords, TexGen, float*, void>)ProcAddr("glTexGenfv");
        glTexGeni = (delegate* unmanaged<Coords, TexGen, int, void>)ProcAddr("glTexGeni");
        glTexGeniv = (delegate* unmanaged<Coords, TexGen, int*, void>)ProcAddr("glTexGeniv");
        glTexImage1D = (delegate* unmanaged<TexPTarget, int, InternalFormat, int, int, ImageFormat, ImageType, void*, void>)ProcAddr("glTexImage1D");
        glTexImage2D = (delegate* unmanaged<TexPTarget, int, InternalFormat, int, int, int, ImageFormat, ImageType, void*, void>)ProcAddr("glTexImage2D");
        glTexParameterf = (delegate* unmanaged<TexTarget, TexNV2, float, void>)ProcAddr("glTexParameterf");
        glTexParameterfv = (delegate* unmanaged<TexTarget, TexNV2, float*, void>)ProcAddr("glTexParameterfv");
        glTexParameteri = (delegate* unmanaged<TexTarget, TexNV2, int, void>)ProcAddr("glTexParameteri");
        glTexParameteriv = (delegate* unmanaged<TexTarget, TexNV2, int*, void>)ProcAddr("glTexParameteriv");
        glTexSubImage1D = (delegate* unmanaged<int, int, int, int, ImageFormat, ImageType, void*, void>)ProcAddr("glTexSubImage1D");
        glTexSubImage2D = (delegate* unmanaged<int, int, int, int, int, int, ImageFormat, ImageType, void*, void>)ProcAddr("glTexSubImage2D");
        glTranslated = (delegate* unmanaged<double, double, double, void>)ProcAddr("glTranslated");
        glTranslatef = (delegate* unmanaged<float, float, float, void>)ProcAddr("glTranslatef");
        glVertex2d = (delegate* unmanaged<double, double, void>)ProcAddr("glVertex2d");
        glVertex2dv = (delegate* unmanaged<double*, void>)ProcAddr("glVertex2dv");
        glVertex2f = (delegate* unmanaged<float, float, void>)ProcAddr("glVertex2f");
        glVertex2fv = (delegate* unmanaged<float*, void>)ProcAddr("glVertex2fv");
        glVertex2i = (delegate* unmanaged<int, int, void>)ProcAddr("glVertex2i");
        glVertex2iv = (delegate* unmanaged<int*, void>)ProcAddr("glVertex2iv");
        glVertex2s = (delegate* unmanaged<short, short, void>)ProcAddr("glVertex2s");
        glVertex2sv = (delegate* unmanaged<short*, void>)ProcAddr("glVertex2sv");
        glVertex3d = (delegate* unmanaged<double, double, double, void>)ProcAddr("glVertex3d");
        glVertex3dv = (delegate* unmanaged<double*, void>)ProcAddr("glVertex3dv");
        glVertex3f = (delegate* unmanaged<float, float, float, void>)ProcAddr("glVertex3f");
        glVertex3fv = (delegate* unmanaged<float*, void>)ProcAddr("glVertex3fv");
        glVertex3i = (delegate* unmanaged<int, int, int, void>)ProcAddr("glVertex3i");
        glVertex3iv = (delegate* unmanaged<int*, void>)ProcAddr("glVertex3iv");
        glVertex3s = (delegate* unmanaged<short, short, short, void>)ProcAddr("glVertex3s");
        glVertex3sv = (delegate* unmanaged<short*, void>)ProcAddr("glVertex3sv");
        glVertex4d = (delegate* unmanaged<double, double, double, double, void>)ProcAddr("glVertex4d");
        glVertex4dv = (delegate* unmanaged<double*, void>)ProcAddr("glVertex4dv");
        glVertex4f = (delegate* unmanaged<float, float, float, float, void>)ProcAddr("glVertex4f");
        glVertex4fv = (delegate* unmanaged<float*, void>)ProcAddr("glVertex4fv");
        glVertex4i = (delegate* unmanaged<int, int, int, int, void>)ProcAddr("glVertex4i");
        glVertex4iv = (delegate* unmanaged<int*, void>)ProcAddr("glVertex4iv");
        glVertex4s = (delegate* unmanaged<short, short, short, short, void>)ProcAddr("glVertex4s");
        glVertex4sv = (delegate* unmanaged<short*, void>)ProcAddr("glVertex4sv");
        glVertexPointer = (delegate* unmanaged<int, TexType, int, void*, void>)ProcAddr("glVertexPointer");
        glViewport = (delegate* unmanaged<int, int, int, int, void>)ProcAddr("glViewport");

        /* After OpenGL 1.1 */

        glGenBuffers = (delegate* unmanaged<int, uint*, void>)ProcAddr("glGenBuffers");
        glDeleteBuffers = (delegate* unmanaged<int, uint*, void>)ProcAddr("glDeleteBuffers");
        glBindBuffer = (delegate* unmanaged<Enums.Buffer, uint, void>)ProcAddr("glBindBuffers");
        glBufferData = (delegate* unmanaged<Enums.Buffer, int, void*, BufferUsage, void>)ProcAddr("glBufferData");
    }

    public nint Base;
    public delegate* unmanaged<Op, float, void> glAccum;
    public delegate* unmanaged<Func, float, void> glAlphaFunc;
    public delegate* unmanaged<int, uint*, byte*, byte> glAreTexturesResident;
    public delegate* unmanaged<int, void> glArrayElement;
    public delegate* unmanaged<Mode, void> glBegin;
    public delegate* unmanaged<TexPTarget, uint, void> glBindTexture;
    public delegate* unmanaged<int, int, float, float, float, float, byte*, void> glBitmap;
    public delegate* unmanaged<Factor, Factor, void> glBlendFunc;
    public delegate* unmanaged<uint, void> glCallList;
    public delegate* unmanaged<int, Enums.Type, void*, void> glCallLists;
    public delegate* unmanaged<uint, void> glClear;
    public delegate* unmanaged<float, float, float, float, void> glClearAccum;
    public delegate* unmanaged<float, float, float, float, void> glClearColor;
    public delegate* unmanaged<double, void> glClearDepth;
    public delegate* unmanaged<float, void> glClearIndex;
    public delegate* unmanaged<int, void> glClearStencil;
    public delegate* unmanaged<Plane, double*, void> glClipPlane;
    public delegate* unmanaged<sbyte, sbyte, sbyte, void> glColor3b;
    public delegate* unmanaged<sbyte*, void> glColor3bv;
    public delegate* unmanaged<double, double, double, void> glColor3d;
    public delegate* unmanaged<double*, void> glColor3dv;
    public delegate* unmanaged<float, float, float, void> glColor3f;
    public delegate* unmanaged<float*, void> glColor3fv;
    public delegate* unmanaged<int, int, int, void> glColor3i;
    public delegate* unmanaged<int*, void> glColor3iv;
    public delegate* unmanaged<short, short, short, void> glColor3s;
    public delegate* unmanaged<short*, void> glColor3sv;
    public delegate* unmanaged<byte, byte, byte, void> glColor3ub;
    public delegate* unmanaged<byte*, void> glColor3ubv;
    public delegate* unmanaged<uint, uint, uint, void> glColor3ui;
    public delegate* unmanaged<uint*, void> glColor3uiv;
    public delegate* unmanaged<ushort, ushort, ushort, void> glColor3us;
    public delegate* unmanaged<ushort*, void> glColor3usv;
    public delegate* unmanaged<sbyte, sbyte, sbyte, sbyte, void> glColor4b;
    public delegate* unmanaged<sbyte*, void> glColor4bv;
    public delegate* unmanaged<double, double, double, double, void> glColor4d;
    public delegate* unmanaged<double*, void> glColor4dv;
    public delegate* unmanaged<float, float, float, float, void> glColor4f;
    public delegate* unmanaged<float*, void> glColor4fv;
    public delegate* unmanaged<int, int, int, int, void> glColor4i;
    public delegate* unmanaged<int*, void> glColor4iv;
    public delegate* unmanaged<short, short, short, short, void> glColor4s;
    public delegate* unmanaged<short*, void> glColor4sv;
    public delegate* unmanaged<byte, byte, byte, byte, void> glColor4ub;
    public delegate* unmanaged<byte*, void> glColor4ubv;
    public delegate* unmanaged<uint, uint, uint, uint, void> glColor4ui;
    public delegate* unmanaged<uint*, void> glColor4uiv;
    public delegate* unmanaged<ushort, ushort, ushort, ushort, void> glColor4us;
    public delegate* unmanaged<ushort*, void> glColor4usv;
    public delegate* unmanaged<byte, byte, byte, byte, void> glColorMask;
    public delegate* unmanaged<Face, MaterialParam, void> glColorMaterial;
    public delegate* unmanaged<int, BType, int, void*, void> glColorPointer;
    public delegate* unmanaged<int, int, int, int, CopyType, void> glCopyPixels;
    public delegate* unmanaged<TexPTarget, int, InternalFormat, int, int, int, int, void> glCopyTexImage1D;
    public delegate* unmanaged<TexPTarget, int, InternalFormat, int, int, int, int, int, void> glCopyTexImage2D;
    public delegate* unmanaged<TexPTarget, int, int, int, int, int, void> glCopyTexSubImage1D;
    public delegate* unmanaged<TexPTarget, int, int, int, int, int, int, int, void> glCopyTexSubImage2D;
    public delegate* unmanaged<Face, void> glCullFace;
    public delegate* unmanaged<uint, int, void> glDeleteLists;
    public delegate* unmanaged<int, uint*, void> glDeleteTextures;
    public delegate* unmanaged<Func, void> glDepthFunc;
    public delegate* unmanaged<byte, void> glDepthMask;
    public delegate* unmanaged<double, double, void> glDepthRange;
    public delegate* unmanaged<Cap, void> glDisable;
    public delegate* unmanaged<ArrayState, void> glDisableClientState;
    public delegate* unmanaged<Mode, int, int, void> glDrawArrays;
    public delegate* unmanaged<Mode, void> glDrawBuffer;
    public delegate* unmanaged<Mode, int, BUType, void*, void> glDrawElements;
    public delegate* unmanaged<int, int, ImageFormat, BType, void*, void> glDrawPixels;
    public delegate* unmanaged<byte, void> glEdgeFlag;
    public delegate* unmanaged<int, void*, void> glEdgeFlagPointer;
    public delegate* unmanaged<byte*, void> glEdgeFlagv;
    public delegate* unmanaged<Cap, void> glEnable;
    public delegate* unmanaged<ArrayState, void> glEnableClientState;
    public delegate* unmanaged<void> glEnd;
    public delegate* unmanaged<void> glEndList;
    public delegate* unmanaged<double, void> glEvalCoord1d;
    public delegate* unmanaged<double*, void> glEvalCoord1dv;
    public delegate* unmanaged<float, void> glEvalCoord1f;
    public delegate* unmanaged<float*, void> glEvalCoord1fv;
    public delegate* unmanaged<double, double, void> glEvalCoord2d;
    public delegate* unmanaged<double*, void> glEvalCoord2dv;
    public delegate* unmanaged<float, float, void> glEvalCoord2f;
    public delegate* unmanaged<float*, void> glEvalCoord2fv;
    public delegate* unmanaged<EMesh, int, int, void> glEvalMesh1;
    public delegate* unmanaged<Mesh, int, int, int, int, void> glEvalMesh2;
    public delegate* unmanaged<int, void> glEvalPoint1;
    public delegate* unmanaged<int, int, void> glEvalPoint2;
    public delegate* unmanaged<int, Vertex, float*, void> glFeedbackBuffer;
    public delegate* unmanaged<void> glFinish;
    public delegate* unmanaged<void> glFlush;
    public delegate* unmanaged<Fog, float, void> glFogf;
    public delegate* unmanaged<Fog, float*, void> glFogfv;
    public delegate* unmanaged<Fog, int, void> glFogi;
    public delegate* unmanaged<Fog, int*, void> glFogiv;
    public delegate* unmanaged<FaceMode, void> glFrontFace;
    public delegate* unmanaged<double, double, double, double, double, double, void> glFrustum;
    public delegate* unmanaged<int, uint> glGenLists;
    public delegate* unmanaged<int, uint*, void> glGenTextures;
    public delegate* unmanaged<PName, byte*, void> glGetBooleanv;
    public delegate* unmanaged<Plane, double*, void> glGetClipPlane;
    public delegate* unmanaged<PName, double*, void> glGetDoublev;
    public delegate* unmanaged<Error> glGetError;
    public delegate* unmanaged<PName, float*, void> glGetFloatv;
    public delegate* unmanaged<PName, int*, void> glGetIntegerv;
    public delegate* unmanaged<Light, LightN, float*, void> glGetLightfv;
    public delegate* unmanaged<Light, LightN, int*, void> glGetLightiv;
    public delegate* unmanaged<MapTarget, Query, double*, void> glGetMapdv;
    public delegate* unmanaged<MapTarget, Query, float*, void> glGetMapfv;
    public delegate* unmanaged<MapTarget, Query, int*, void> glGetMapiv;
    public delegate* unmanaged<Side, MaterialParam, float*, void> glGetMaterialfv;
    public delegate* unmanaged<Side, MaterialParam, int*, void> glGetMaterialiv;
    public delegate* unmanaged<Map, float*, void> glGetPixelMapfv;
    public delegate* unmanaged<Map, uint*, void> glGetPixelMapuiv;
    public delegate* unmanaged<Map, ushort*, void> glGetPixelMapusv;
    public delegate* unmanaged<PNamePtr, void**, void> glGetPointerv;
    public delegate* unmanaged<byte*, void> glGetPolygonStipple;
    public delegate* unmanaged<StringName, byte*> glGetString;
    public delegate* unmanaged<int, TexEnvN, float*, void> glGetTexEnvfv;
    public delegate* unmanaged<int, TexEnvN, int*, void> glGetTexEnviv;
    public delegate* unmanaged<Coords, TexGenN, double*, void> glGetTexGendv;
    public delegate* unmanaged<Coords, TexGenN, float*, void> glGetTexGenfv;
    public delegate* unmanaged<Coords, TexGenN, int*, void> glGetTexGeniv;
    public delegate* unmanaged<TexTarget, int, Image, BType, void*, void> glGetTexImage;
    public delegate* unmanaged<TexPTarget, int, TexN, float*, void> glGetTexLevelParameterfv;
    public delegate* unmanaged<TexPTarget, int, TexN, int*, void> glGetTexLevelParameteriv;
    public delegate* unmanaged<TexTarget, TexNV, float*, void> glGetTexParameterfv;
    public delegate* unmanaged<TexTarget, TexNV, int*, void> glGetTexParameteriv;
    public delegate* unmanaged<Hint, Calc, void> glHint;
    public delegate* unmanaged<uint, void> glIndexMask;
    public delegate* unmanaged<TexType, int, void*, void> glIndexPointer;
    public delegate* unmanaged<double, void> glIndexd;
    public delegate* unmanaged<double*, void> glIndexdv;
    public delegate* unmanaged<float, void> glIndexf;
    public delegate* unmanaged<float*, void> glIndexfv;
    public delegate* unmanaged<int, void> glIndexi;
    public delegate* unmanaged<int*, void> glIndexiv;
    public delegate* unmanaged<short, void> glIndexs;
    public delegate* unmanaged<short*, void> glIndexsv;
    public delegate* unmanaged<byte, void> glIndexub;
    public delegate* unmanaged<byte*, void> glIndexubv;
    public delegate* unmanaged<void> glInitNames;
    public delegate* unmanaged<ArrayFormat, int, void*, void> glInterleavedArrays;
    public delegate* unmanaged<Cap, byte> glIsEnabled;
    public delegate* unmanaged<uint, byte> glIsList;
    public delegate* unmanaged<uint, byte> glIsTexture;
    public delegate* unmanaged<LightModel, float, void> glLightModelf;
    public delegate* unmanaged<LightModel, float*, void> glLightModelfv;
    public delegate* unmanaged<LightModel, int, void> glLightModeli;
    public delegate* unmanaged<LightModel, int*, void> glLightModeliv;
    public delegate* unmanaged<Light, LightN, float, void> glLightf;
    public delegate* unmanaged<Light, LightN, float*, void> glLightfv;
    public delegate* unmanaged<Light, LightN, int, void> glLighti;
    public delegate* unmanaged<Light, LightN, int*, void> glLightiv;
    public delegate* unmanaged<int, ushort, void> glLineStipple;
    public delegate* unmanaged<float, void> glLineWidth;
    public delegate* unmanaged<uint, void> glListBase;
    public delegate* unmanaged<void> glLoadIdentity;
    public delegate* unmanaged<double*, void> glLoadMatrixd;
    public delegate* unmanaged<float*, void> glLoadMatrixf;
    public delegate* unmanaged<uint, void> glLoadName;
    public delegate* unmanaged<OpCode, void> glLogicOp;
    public delegate* unmanaged<Map1Target, double, double, int, int, double*, void> glMap1d;
    public delegate* unmanaged<Map1Target, float, float, int, int, float*, void> glMap1f;
    public delegate* unmanaged<Map1Target, double, double, int, int, double, double, int, int, double*, void> glMap2d;
    public delegate* unmanaged<Map1Target, float, float, int, int, float, float, int, int, float*, void> glMap2f;
    public delegate* unmanaged<int, double, double, void> glMapGrid1d;
    public delegate* unmanaged<int, float, float, void> glMapGrid1f;
    public delegate* unmanaged<int, double, double, int, double, double, void> glMapGrid2d;
    public delegate* unmanaged<int, float, float, int, float, float, void> glMapGrid2f;
    public delegate* unmanaged<Side, int, float, void> glMaterialf;
    public delegate* unmanaged<Side, MaterialParam, float*, void> glMaterialfv;
    public delegate* unmanaged<Side, MaterialParam, int, void> glMateriali;
    public delegate* unmanaged<Side, MaterialParam, int*, void> glMaterialiv;
    public delegate* unmanaged<Matrix, void> glMatrixMode;
    public delegate* unmanaged<double*, void> glMultMatrixd;
    public delegate* unmanaged<float*, void> glMultMatrixf;
    public delegate* unmanaged<uint, Compile, void> glNewList;
    public delegate* unmanaged<sbyte, sbyte, sbyte, void> glNormal3b;
    public delegate* unmanaged<sbyte*, void> glNormal3bv;
    public delegate* unmanaged<double, double, double, void> glNormal3d;
    public delegate* unmanaged<double*, void> glNormal3dv;
    public delegate* unmanaged<float, float, float, void> glNormal3f;
    public delegate* unmanaged<float*, void> glNormal3fv;
    public delegate* unmanaged<int, int, int, void> glNormal3i;
    public delegate* unmanaged<int*, void> glNormal3iv;
    public delegate* unmanaged<short, short, short, void> glNormal3s;
    public delegate* unmanaged<short*, void> glNormal3sv;
    public delegate* unmanaged<PtrType, int, void*, void> glNormalPointer;
    public delegate* unmanaged<double, double, double, double, double, double, void> glOrtho;
    public delegate* unmanaged<float, void> glPassThrough;
    public delegate* unmanaged<Map, int, float*, void> glPixelMapfv;
    public delegate* unmanaged<Map, int, uint*, void> glPixelMapuiv;
    public delegate* unmanaged<Map, int, ushort*, void> glPixelMapusv;
    public delegate* unmanaged<StoreN, float, void> glPixelStoref;
    public delegate* unmanaged<StoreN, int, void> glPixelStorei;
    public delegate* unmanaged<TransferN, float, void> glPixelTransferf;
    public delegate* unmanaged<TransferN, int, void> glPixelTransferi;
    public delegate* unmanaged<float, float, void> glPixelZoom;
    public delegate* unmanaged<float, void> glPointSize;
    public delegate* unmanaged<MaterialFace, Mesh, void> glPolygonMode;
    public delegate* unmanaged<float, float, void> glPolygonOffset;
    public delegate* unmanaged<byte*, void> glPolygonStipple;
    public delegate* unmanaged<void> glPopAttrib;
    public delegate* unmanaged<void> glPopClientAttrib;
    public delegate* unmanaged<void> glPopMatrix;
    public delegate* unmanaged<void> glPopName;
    public delegate* unmanaged<int, uint*, float*, void> glPrioritizeTextures;
    public delegate* unmanaged<uint, void> glPushAttrib;
    public delegate* unmanaged<uint, void> glPushClientAttrib;
    public delegate* unmanaged<void> glPushMatrix;
    public delegate* unmanaged<uint, void> glPushName;
    public delegate* unmanaged<double, double, void> glRasterPos2d;
    public delegate* unmanaged<double*, void> glRasterPos2dv;
    public delegate* unmanaged<float, float, void> glRasterPos2f;
    public delegate* unmanaged<float*, void> glRasterPos2fv;
    public delegate* unmanaged<int, int, void> glRasterPos2i;
    public delegate* unmanaged<int*, void> glRasterPos2iv;
    public delegate* unmanaged<short, short, void> glRasterPos2s;
    public delegate* unmanaged<short*, void> glRasterPos2sv;
    public delegate* unmanaged<double, double, double, void> glRasterPos3d;
    public delegate* unmanaged<double*, void> glRasterPos3dv;
    public delegate* unmanaged<float, float, float, void> glRasterPos3f;
    public delegate* unmanaged<float*, void> glRasterPos3fv;
    public delegate* unmanaged<int, int, int, void> glRasterPos3i;
    public delegate* unmanaged<int*, void> glRasterPos3iv;
    public delegate* unmanaged<short, short, short, void> glRasterPos3s;
    public delegate* unmanaged<short*, void> glRasterPos3sv;
    public delegate* unmanaged<double, double, double, double, void> glRasterPos4d;
    public delegate* unmanaged<double*, void> glRasterPos4dv;
    public delegate* unmanaged<float, float, float, float, void> glRasterPos4f;
    public delegate* unmanaged<float*, void> glRasterPos4fv;
    public delegate* unmanaged<int, int, int, int, void> glRasterPos4i;
    public delegate* unmanaged<int*, void> glRasterPos4iv;
    public delegate* unmanaged<short, short, short, short, void> glRasterPos4s;
    public delegate* unmanaged<short*, void> glRasterPos4sv;
    public delegate* unmanaged<Buf, void> glReadBuffer;
    public delegate* unmanaged<int, int, int, int, Image, ReadType, void*, void> glReadPixels;
    public delegate* unmanaged<double, double, double, double, void> glRectd;
    public delegate* unmanaged<double*, double*, void> glRectdv;
    public delegate* unmanaged<float, float, float, float, void> glRectf;
    public delegate* unmanaged<float*, float*, void> glRectfv;
    public delegate* unmanaged<int, int, int, int, void> glRecti;
    public delegate* unmanaged<int*, int*, void> glRectiv;
    public delegate* unmanaged<short, short, short, short, void> glRects;
    public delegate* unmanaged<short*, short*, void> glRectsv;
    public delegate* unmanaged<Render, int> glRenderMode;
    public delegate* unmanaged<double, double, double, double, void> glRotated;
    public delegate* unmanaged<float, float, float, float, void> glRotatef;
    public delegate* unmanaged<double, double, double, void> glScaled;
    public delegate* unmanaged<float, float, float, void> glScalef;
    public delegate* unmanaged<int, int, int, int, void> glScissor;
    public delegate* unmanaged<int, uint*, void> glSelectBuffer;
    public delegate* unmanaged<Fill, void> glShadeModel;
    public delegate* unmanaged<Func, int, uint, void> glStencilFunc;
    public delegate* unmanaged<uint, void> glStencilMask;
    public delegate* unmanaged<Fail, Fail, Fail, void> glStencilOp;
    public delegate* unmanaged<double, void> glTexCoord1d;
    public delegate* unmanaged<double*, void> glTexCoord1dv;
    public delegate* unmanaged<float, void> glTexCoord1f;
    public delegate* unmanaged<float*, void> glTexCoord1fv;
    public delegate* unmanaged<int, void> glTexCoord1i;
    public delegate* unmanaged<int*, void> glTexCoord1iv;
    public delegate* unmanaged<short, void> glTexCoord1s;
    public delegate* unmanaged<short*, void> glTexCoord1sv;
    public delegate* unmanaged<double, double, void> glTexCoord2d;
    public delegate* unmanaged<double*, void> glTexCoord2dv;
    public delegate* unmanaged<float, float, void> glTexCoord2f;
    public delegate* unmanaged<float*, void> glTexCoord2fv;
    public delegate* unmanaged<int, int, void> glTexCoord2i;
    public delegate* unmanaged<int*, void> glTexCoord2iv;
    public delegate* unmanaged<short, short, void> glTexCoord2s;
    public delegate* unmanaged<short*, void> glTexCoord2sv;
    public delegate* unmanaged<double, double, double, void> glTexCoord3d;
    public delegate* unmanaged<double*, void> glTexCoord3dv;
    public delegate* unmanaged<float, float, float, void> glTexCoord3f;
    public delegate* unmanaged<float*, void> glTexCoord3fv;
    public delegate* unmanaged<int, int, int, void> glTexCoord3i;
    public delegate* unmanaged<int*, void> glTexCoord3iv;
    public delegate* unmanaged<short, short, short, void> glTexCoord3s;
    public delegate* unmanaged<short*, void> glTexCoord3sv;
    public delegate* unmanaged<double, double, double, double, void> glTexCoord4d;
    public delegate* unmanaged<double*, void> glTexCoord4dv;
    public delegate* unmanaged<float, float, float, float, void> glTexCoord4f;
    public delegate* unmanaged<float*, void> glTexCoord4fv;
    public delegate* unmanaged<int, int, int, int, void> glTexCoord4i;
    public delegate* unmanaged<int*, void> glTexCoord4iv;
    public delegate* unmanaged<short, short, short, short, void> glTexCoord4s;
    public delegate* unmanaged<short*, void> glTexCoord4sv;
    public delegate* unmanaged<int, TexType, int, void*, void> glTexCoordPointer;
    public delegate* unmanaged<int, TexEnvN, float, void> glTexEnvf;
    public delegate* unmanaged<int, TexEnvN, float*, void> glTexEnvfv;
    public delegate* unmanaged<int, TexEnvN, int, void> glTexEnvi;
    public delegate* unmanaged<int, TexEnvN, int*, void> glTexEnviv;
    public delegate* unmanaged<Coords, TexGen, double, void> glTexGend;
    public delegate* unmanaged<Coords, TexGen, double*, void> glTexGendv;
    public delegate* unmanaged<Coords, TexGen, float, void> glTexGenf;
    public delegate* unmanaged<Coords, TexGen, float*, void> glTexGenfv;
    public delegate* unmanaged<Coords, TexGen, int, void> glTexGeni;
    public delegate* unmanaged<Coords, TexGen, int*, void> glTexGeniv;
    public delegate* unmanaged<TexPTarget, int, InternalFormat, int, int, ImageFormat, ImageType, void*, void> glTexImage1D;
    public delegate* unmanaged<TexPTarget, int, InternalFormat, int, int, int, ImageFormat, ImageType, void*, void> glTexImage2D;
    public delegate* unmanaged<TexTarget, TexNV2, float, void> glTexParameterf;
    public delegate* unmanaged<TexTarget, TexNV2, float*, void> glTexParameterfv;
    public delegate* unmanaged<TexTarget, TexNV2, int, void> glTexParameteri;
    public delegate* unmanaged<TexTarget, TexNV2, int*, void> glTexParameteriv;
    public delegate* unmanaged<int, int, int, int, ImageFormat, ImageType, void*, void> glTexSubImage1D;
    public delegate* unmanaged<int, int, int, int, int, int, ImageFormat, ImageType, void*, void> glTexSubImage2D;
    public delegate* unmanaged<double, double, double, void> glTranslated;
    public delegate* unmanaged<float, float, float, void> glTranslatef;
    public delegate* unmanaged<double, double, void> glVertex2d;
    public delegate* unmanaged<double*, void> glVertex2dv;
    public delegate* unmanaged<float, float, void> glVertex2f;
    public delegate* unmanaged<float*, void> glVertex2fv;
    public delegate* unmanaged<int, int, void> glVertex2i;
    public delegate* unmanaged<int*, void> glVertex2iv;
    public delegate* unmanaged<short, short, void> glVertex2s;
    public delegate* unmanaged<short*, void> glVertex2sv;
    public delegate* unmanaged<double, double, double, void> glVertex3d;
    public delegate* unmanaged<double*, void> glVertex3dv;
    public delegate* unmanaged<float, float, float, void> glVertex3f;
    public delegate* unmanaged<float*, void> glVertex3fv;
    public delegate* unmanaged<int, int, int, void> glVertex3i;
    public delegate* unmanaged<int*, void> glVertex3iv;
    public delegate* unmanaged<short, short, short, void> glVertex3s;
    public delegate* unmanaged<short*, void> glVertex3sv;
    public delegate* unmanaged<double, double, double, double, void> glVertex4d;
    public delegate* unmanaged<double*, void> glVertex4dv;
    public delegate* unmanaged<float, float, float, float, void> glVertex4f;
    public delegate* unmanaged<float*, void> glVertex4fv;
    public delegate* unmanaged<int, int, int, int, void> glVertex4i;
    public delegate* unmanaged<int*, void> glVertex4iv;
    public delegate* unmanaged<short, short, short, short, void> glVertex4s;
    public delegate* unmanaged<short*, void> glVertex4sv;
    public delegate* unmanaged<int, TexType, int, void*, void> glVertexPointer;
    public delegate* unmanaged<int, int, int, int, void> glViewport;

    /* After OpenGL 1.1 */
    public delegate* unmanaged<int, uint*, void> glGenBuffers;
    public delegate* unmanaged<int, uint*, void> glDeleteBuffers;
    public delegate* unmanaged<Enums.Buffer, uint, void> glBindBuffer;
    public delegate* unmanaged<Enums.Buffer, int, void*, BufferUsage, void> glBufferData;
}